type User implements MongoBase {
  firstName: String
  lastName: String
  email: EmailAddress

  id: ObjectID!
  schemaVersion: String
  createdAt: DateTime
  updatedAt: DateTime
}

type Account implements MongoBase {
  name: String
  owner: User
  ownerId: ObjectID!

  id: ObjectID!
  schemaVersion: String
  createdAt: DateTime
  updatedAt: DateTime
}
type Contact implements MongoBase {
  name: String
  owner: User
  ownerId: ObjectID!

  id: ObjectID!
  schemaVersion: String
  createdAt: DateTime
  updatedAt: DateTime
}

extend type Mutation {
  createUser: User
  """
  Allows the user to update their profile
  """
  updateUser(input: UserUpdateInput!): User

  createAuthHeaderForProfilePhoto(input: ProfilePhotoImageInput!): CreateAuthHeaderForProfilePhotoOutput!
}

extend type Query {
  user(id: ID!): User
  users: [User] @cacheControl(maxAge: 90)
}

input UserUpdateInput {
  id: ObjectID!
  firstName: String
  lastName: String
  email: String
}

input ProfilePhotoImageInput {
  contentType: String
  contentLength: Int
}
type CreateAuthHeaderForProfilePhotoOutput {
  authHeader: String
  blobName: String
  requestDate: String
  success: Boolean
  errorMessage: String
}